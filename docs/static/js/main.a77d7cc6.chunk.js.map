{"version":3,"sources":["components/AddCategory.js","components/GridGifItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","lastState","includes","onSubmit","className","type","value","onChange","target","onClick","GridGifItem","title","url","src","alt","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","item","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","toUpperCase","stroke","key","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"uPAgCeA,MA7Bf,YAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACFC,mBAAS,IADP,mBAC/BC,EAD+B,KACnBC,EADmB,KAKhCC,EAAe,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OACZA,EAAUC,SAASR,GAAnB,YACQO,GADR,CAEKP,GAFL,mBAEoBO,OAEtBN,EAAc,MAIlB,OACE,0BAAMQ,SAAUP,EAAcQ,UAAU,QACtC,2BAAOC,KAAK,OAAOC,MAAOZ,EAAYa,SAjBtB,SAACV,GAAD,OAAOF,EAAcE,EAAEW,OAAOF,UAkB9C,4BAAQG,QAASb,GAAjB,eCPSc,MAdf,YAAsC,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IAC5B,OACE,yBAAKR,UAAU,6CACb,yBAAKS,IAAKD,EAAKE,IAAKH,EAAOP,UAAU,WACrC,gCAAMO,EAAN,O,uBCYSI,EAnBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACRC,EADQ,iDACwCC,UACpDH,GAFY,+DAKKI,MAAMF,GALX,cAKRG,EALQ,gBAMSA,EAAKC,OANd,uBAMNC,EANM,EAMNA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAU,IAAD,EAC9B,MAAO,CACLC,GAAID,EAAKC,GACThB,MAAOe,EAAKf,MACZC,IAAG,UAAEc,EAAKE,cAAP,aAAE,EAAaC,iBAAiBjB,QAZzB,kBAgBPY,GAhBO,4CAAH,sD,OCqCEM,MA/Bf,YAAgC,IAAbd,EAAY,EAAZA,SAAY,ECDH,SAACA,GAAc,IAAD,EACdvB,mBAAS,CACjC8B,KAAM,GACNQ,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRnB,EAAQC,GAAUmB,MAAK,SAACC,GACtBH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAGZ,CAACf,IAEGgB,EDb2BK,CAAarB,GAAjCY,EADe,EACrBL,KAAcQ,EADO,EACPA,QAMtB,OACE,yBAAK3B,UAAU,uBACb,wBAAIA,UAAU,sDACX,IACAY,EAASsB,cAAe,KAG3B,yBAAKlC,UAAU,UACZ2B,GAAW,kBAAC,eAAD,CAAcQ,OAAO,aAGnC,yBAAKnC,UAAU,aACZwB,EAAOH,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAac,IAAKd,EAAKC,IAAQD,UEH1Be,EAnBM,SAAC,GAAiC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IAEhBjD,mBAAUiD,GAFM,mBAE7CC,EAF6C,KAEjCnD,EAFiC,KAIpD,OACE,oCACE,+CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEEmD,EAAWlB,KAAK,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACEwB,IAAQxB,EACRA,SAAaA,SCVzB4B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.a77d7cc6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AddCategory({ setCategories }) {\n  const [inputValue, setInputValue] = useState('');\n\n  const changeValue = (e) => setInputValue(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategories((lastState) =>\n        lastState.includes(inputValue)\n          ? [...lastState]\n          : [inputValue, ...lastState]\n      );\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <input type=\"text\" value={inputValue} onChange={changeValue} />\n      <button onClick={handleSubmit}>Adicionar</button>\n    </form>\n  );\n}\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction GridGifItem({ title, url }) {\n  return (\n    <div className=\"card animate__animated animate__slideInUp\">\n      <img src={url} alt={title} className=\"images\" />\n      <h3> {title} </h3>\n    </div>\n  );\n}\n\nGridGifItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nexport default GridGifItem;\n","const getGifs = async (category) => {\n  const URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=6mB0j0dSPEhJBKsp2e7exd5grVNcWGKT`;\n\n  const resp = await fetch(URL);\n  const { data } = await resp.json();\n\n  const gifs = data.map((item) => {\n    return {\n      id: item.id,\n      title: item.title,\n      url: item.images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n\nexport default getGifs;\n","import React from 'react';\nimport GridGifItem from './GridGifItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { BallTriangle } from 'svg-loaders-react';\nimport PropTypes from 'prop-types';\n\nfunction GifGrid({ category }) {\n  const { data: images, loading } = useFetchGifs(category);\n\n  // useEffect( () => {\n  //   getGifs( category ).then( setImages )\n  // }, [category])\n\n  return (\n    <div className=\"container__grid-gif\">\n      <h3 className=\"container-title animate__animated animate__flipInX\">\n        {' '}\n        {category.toUpperCase()}{' '}\n      </h3>\n\n      <div className=\"loader\">\n        {loading && <BallTriangle stroke=\"#2B6CB0\" />}\n      </div>\n\n      <div className=\"container\">\n        {images.map((item) => (\n          <GridGifItem key={item.id} {...item} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n\nexport default GifGrid;\n","// Los hooks son funciones\n\nimport { useState, useEffect } from 'react';\nimport getGifs from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state; // { data : [], loading: true}\n};\n","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\nconst GifExpertApp = ( { defaultCategories = [] }) => {\n\n  const [categories, setCategories] = useState( defaultCategories )\n\n  return (\n    <>\n      <h2>Gift Expert App</h2>\n      <AddCategory setCategories={ setCategories }/>\n      <hr />\n      {\n        categories.map( category =>\n          <GifGrid\n            key = { category }\n            category = { category } />\n          )\n      }\n    </>\n  )\n}\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp /> ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}