{"version":3,"sources":["components/AddCategory.js","components/GridGifItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","lastState","includes","onSubmit","className","type","value","onChange","target","onClick","GridGifItem","title","url","src","alt","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","item","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","toUpperCase","stroke","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uPA2BeA,MAxBf,YAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACFC,mBAAS,IADP,mBAC/BC,EAD+B,KACnBC,EADmB,KAGhCC,EAAe,SAAAC,GACnBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAS,OAAKA,EAAUC,SAAUR,GAArB,YAAyEO,GAAzE,CAAqCP,GAArC,mBAAoDO,OAChFN,EAAc,MAGlB,OACE,0BAAMQ,SAAWP,EAAeQ,UAAU,QACxC,2BACEC,KAAK,OACLC,MAAOZ,EACPa,SAbc,SAAAV,GAAC,OAAIF,EAAcE,EAAEW,OAAOF,UAe5C,4BAAQG,QAAUb,GAAlB,eCJSc,MAbf,YAAsC,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IAC5B,OACE,yBAAKR,UAAU,6CACb,yBAAKS,IAAMD,EAAME,IAAMH,EAAQP,UAAU,WACzC,gCAAOO,EAAP,O,uBCQSI,EAfF,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACRC,EADQ,gDACwCC,UAAWH,GADnD,+DAEKI,MAAOF,GAFZ,cAERG,EAFQ,gBAGSA,EAAKC,OAHd,uBAGNC,EAHM,EAGNA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAKC,GACThB,MAAOe,EAAKf,MACZC,IAAG,UAAEc,EAAKE,cAAP,aAAE,EAAaC,iBAAiBjB,QARzB,kBAWPY,GAXO,4CAAH,sD,OCsCEM,MAhCf,YAAkC,IAAdd,EAAa,EAAbA,SAAa,ECDL,SAAAA,GAAa,IAAD,EACZvB,mBAAS,CACjC8B,KAAM,GACNQ,SAAS,IAH2B,mBAC/BC,EAD+B,KACxBC,EADwB,KAoBtC,OAdAC,qBAAW,WACTnB,EAASC,GAAWmB,MAAM,SAAAC,GAExBC,YAAW,WACTC,QAAQC,IAAIH,GACZH,EAAS,CACPV,KAAMa,EACNL,SAAS,MAEX,UAEH,CAACf,IAGGgB,EDhB0BQ,CAAcxB,GAAlCY,EAHkB,EAGvBL,KAAaQ,EAHU,EAGVA,QAMrB,OACE,6BACE,wBAAI3B,UAAU,sDAAd,IAAsEY,EAASyB,cAA/E,KAEA,yBAAKrC,UAAU,UACb2B,GAAW,kBAAC,eAAD,CAAcW,OAAO,aAGlC,yBAAKtC,UAAU,aAEXwB,EAAOH,KAAK,SAAAC,GAAI,OAChB,kBAAC,EAAD,eACEiB,IAAMjB,EAAKC,IACND,UELFkB,EAnBM,WAAO,IAAD,EAEWnD,mBAAS,CAAC,SAFrB,mBAElBoD,EAFkB,KAENrD,EAFM,KAIzB,OACE,oCACE,+CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEEqD,EAAWpB,KAAK,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACE2B,IAAQ3B,EACRA,SAAaA,SCVzB8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.779fd5e8.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nfunction AddCategory({ setCategories }) {\n  const [inputValue, setInputValue] = useState('');\n  const changeValue = e => setInputValue(e.target.value)\n  const handleSubmit = e => {\n    e.preventDefault();\n    if ( inputValue.trim().length > 2) {\n      setCategories( lastState => !lastState.includes( inputValue )? [ inputValue, ...lastState,  ] : [ ...lastState] )\n      setInputValue('')\n    }\n  }\n  return (\n    <form onSubmit={ handleSubmit } className=\"form\">\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={ changeValue }\n      />\n      <button onClick={ handleSubmit }>Adicionar</button>\n    </form>\n  )\n}\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\nexport default AddCategory;","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction GridGifItem( {title, url} ) {\n  return(\n    <div className=\"card animate__animated animate__slideInUp\">\n      <img src={ url } alt={ title } className=\"images\"/>\n      <h3> { title } </h3>\n    </div>\n  )\n}\n\nGridGifItem.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n\nexport default GridGifItem\n\n","const getGifs = async ( category ) => {\n  const URL = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=20&api_key=6mB0j0dSPEhJBKsp2e7exd5grVNcWGKT`;\n  const resp = await fetch( URL );\n  const { data } = await resp.json();\n  const gifs = data.map( item => {\n    return {\n      id: item.id,\n      title: item.title,\n      url: item.images?.downsized_medium.url\n    }\n  })\n  return gifs;\n}\n\n\nexport default getGifs;","import React from 'react'\nimport GridGifItem from './GridGifItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { BallTriangle } from 'svg-loaders-react'\n// import getGifs from '../helpers/getGifs';\n\nfunction GifGrid( { category } ) {\n\n\n  const { data:images, loading } = useFetchGifs( category );\n\n  // useEffect( () => {\n  //   getGifs( category ).then( setImages )\n  // }, [category])\n\n  return (\n    <div>\n      <h3 className=\"container-title animate__animated animate__flipInX\"> { category.toUpperCase() } </h3>\n\n      <div className=\"loader\">\n      { loading && <BallTriangle stroke=\"#2B6CB0\"/>}\n      </div>\n\n      <div className=\"container\">\n        {\n          images.map( item =>\n          <GridGifItem\n            key={ item.id }\n            {... item }\n          />\n          )\n        }\n      </div>\n\n    </div>\n  )\n}\n\nexport default GifGrid;","// Los hooks son funciones\n\nimport { useState, useEffect } from \"react\"\nimport getGifs from '../helpers/getGifs'\n\nexport const useFetchGifs = category => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n\n  useEffect( () => {\n    getGifs( category ).then( imgs => {\n\n      setTimeout(() => {\n        console.log(imgs);\n        setState({\n          data: imgs,\n          loading: false\n        })\n      },2000)\n    })\n  }, [category])\n\n\n  return state // { data : [], loading: true}\n\n}\n","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\nconst GifExpertApp = () => {\n\n  const [categories, setCategories] = useState(['goku'])\n\n  return (\n    <>\n      <h2>Gift Expert App</h2>\n      <AddCategory setCategories={ setCategories }/>\n      <hr />\n      {\n        categories.map( category =>\n          <GifGrid\n            key = { category }\n            category = { category } />\n          )\n      }\n    </>\n  )\n}\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp /> ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}